generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id             String         @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?        @unique
  emailVerified  DateTime?
  password       String?
  image          String?
  stripeCustId   String?        @unique
  isActive       Boolean        @default(false)
  subscriptionId String?
  role           UserRole       @default(USER)
  accounts       Account[]
  instaling      InstalingData?
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

type InstalingSettings {
  typoChance    Float @default(0)
  capitalChance Int   @default(0)
  synonymChance Int   @default(0)
}

type AutoTimeRange {
  from Int
  to   Int
}

type InstalingAccount {
  login       String
  password    String
  settings    InstalingSettings
  time        AutoTimeRange?
  inProgress  Boolean           @default(false)
  lastSession String?
}

model InstalingData {
  id              String             @id @default(auto()) @map("_id") @db.ObjectId
  accounts        InstalingAccount[]
  selectedAccount Int                @default(0)
  userId          String             @unique @db.ObjectId
  user            User               @relation(fields: [userId], references: [id])
}
